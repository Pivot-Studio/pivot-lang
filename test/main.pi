use std::future::*;
use std::cols::hashtable::*;
use std::cols::arr::*;
use core::string::ToString;

pub fn main() i64 {
    let i1 = -0;
    let i2 = 456 as i32;
    let i3 = -789 as i16;
    let i4 = 12 as i8;
    let u1 = 123;
    let u2 = 456 as u32;
    let u3 = 789 as u16;
    let u4 = 12 as u8;
    let f1 = 123.456;
    let f2 = -789.012;
    let f3 = -0.123 as f32; // TODO: impl a better way to cast f32 (like f64)
    let f4 = -10.0 as f32;
    let a = [1, 2, 3, 4];
    let arr = from_slice(a);
    let h = new_hash_table<i64|i64>(10 as u64, 1 as u64);
    h.insert(1, 2);
    h.insert(2, 3);
    print!(i1);
    print!(i2);
    print!(i3);
    print!(i4);
    print!(u1);
    print!(u2);
    print!(u3);
    print!(u4);
    print!(f1);
    print!(f2);
    print!(f3);
    print!(f4);
    print!(a);
    print!(arr);
    print!(h);
    return 0;
}