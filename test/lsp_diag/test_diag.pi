use test::m1;

trait TestTrait {
}

struct A {
}

impl TestTrait for A {
}

struct B<T> {
    x: BInner<T>;
}

struct BInner<T: TestTrait> {
    x: T;
}

type AA = A | i64;
fn test_mismatch() void {
    let a: AA = 1.0;
    let aa: AA = 1 as i64;
    let b = aa as f32;
    let bb = aa as f32!;
    let c = aa is f32;
    let cc = 1 is f32;
    return;
}

use std::io
fn test_semi() void {
    let a = 1
    test_semi()
    return;
}

trait TA {
}

trait TB: TA {
}

impl TB for A {
}

