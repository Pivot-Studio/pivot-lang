use core::panic;
type A<T> = f32|T;
pub fn test_union() i64 {
    let g : Option<i64> = None{};
    panic::assert(g is None);
    g = 1 as i64;
    let a: i128 = 1;
    let b: f32 = 1.0;
    let c: A<i128> = a;
    let h = c as i128?;
    let i = h as i128!;
    panic::assert(i == 1);
    let d = c;
    d = b;
    let e = a as f32;
    e = 100.1;
    let f = e as i64;
    panic::assert(f == 100);
    let j = test_ret_union() as i64!;
    panic::assert(j == 101);
    return 0;
}

fn test_ret_union() Option<i64> {
    
    return 101;
}