name: release
on:
  push:
    branches:
      - master
      - release/*

env:
  RUSTFLAGS: -Dwarnings

jobs:

  artifacts:
    name: Artifacts
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: "ubuntu-latest"
            dir: linux64
            artifacts: "plc"
            RUSTFLAGS: "-Dwarnings"
          # - os: "windows-latest" # win没有llvm-config，无法正常编译
          #   dir: win64
          #   artifacts: "plc.exe"
          #   RUSTFLAGS: "-Dwarnings -Ctarget-feature=+crt-static"
          - os: "macOS-latest"
            dir: osx64
            artifacts: "plc"
            RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}/llvm
          key: llvm-14
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "14"
          directory: ${{ runner.temp }}/llvm
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: Cargo build
        uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: ${{ matrix.config.RUSTFLAGS }}
          LLVM_SYS_140_PREFIX: ${{ env.LLVM_PATH }}
        with:
          command: build
          args: --release

      - run: mkdir -p ${{ matrix.config.dir }}

      - name: Move artifacts
        env:
          ARTIFACTS: ${{ matrix.config.artifacts }}
          OUT_DIR: ${{ matrix.config.dir }}
          OS: ${{ matrix.config.os }}
        run: |
          import os
          artifacts = os.environ['ARTIFACTS'].split()
          for artifact in artifacts:
            src = "target/release/%s" % artifact
            dst = os.environ['OUT_DIR'] + "/" + artifact
            os.rename(src, dst)
        shell: python

      - name: Shorten commit SHA
        run: echo "COMMIT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV

      - uses: ncipollo/release-action@v1
        name: upload
        with:
          artifacts: ${{ matrix.config.dir }}/*
          commit: master
          tag: ${{ env.COMMIT_SHA }}-${{ matrix.config.os }}
